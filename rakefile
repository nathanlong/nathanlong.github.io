require "rubygems"
require 'rake'
require 'yaml'
require 'time'

SOURCE = "."
CONFIG = {
  'layouts' => File.join(SOURCE, "_layouts"),
  'posts' => File.join(SOURCE, "_posts"),
  'drafts' => File.join(SOURCE, "_drafts"),
  'draft-remote' => "~/Dropbox/docs/drafts",
  'post_ext' => "md",
}

desc "Launch dev environment"
task :dev do
  system "jekyll serve --config _config_dev.yml --drafts --watch"
end # task :dev

# Usage: rake draft title="A Title"
desc "Begin a new draft in #{CONFIG['drafts']}. (Usage: rake draft title='A Title')"
task :draft do
  abort("rake aborted: '#{CONFIG['drafts']}' directory not found.") unless FileTest.directory?(CONFIG['posts'])
  title = ENV["title"] || "new-post"
  slug = title.downcase.strip.gsub(' ', '-').gsub(/[^\w-]/, '')
  filename = File.join(CONFIG['drafts'], "#{slug}.#{CONFIG['post_ext']}")
  if File.exist?(filename)
    abort("rake aborted!") if ask("#{filename} already exists. Do you want to overwrite?", ['y', 'n']) == 'n'
  end
  puts "Creating new post: #{filename}"
  open(filename, 'w') do |post|
    post.puts "---"
    post.puts "layout: post"
    post.puts "title: \"#{title.gsub(/-/,' ')}\""
    post.puts 'subtitle: ""'
    post.puts "---"
  end
  `open -a Macvim #{filename}`
  exit
end # task :draft

# Usage: rake publish post="new-post.md" date="2014-12-18", date is optional, defaults to current day
desc 'Move a draft to posts folder for publishing. (Usage: rake publish post="new-post.md" date="2014-12-18", date is optional, defaults to current day.)'
task :publish do
  abort("rake aborted: '#{CONFIG['posts']}' directory not found.") unless FileTest.directory?(CONFIG['posts'])
  post = ENV["post"]
  begin
    date = (ENV['date'] ? Time.parse(ENV['date']) : Time.now).strftime('%Y-%m-%d')
  rescue Exception => e
    puts "Error - date format must be YYYY-MM-DD, please check you typed it correctly!"
    exit -1
  end
  filename = "#{date}-#{post}"
  if File.exist?(filename)
    abort("rake aborted!") if ask("#{filename} already exists. Do you want to overwrite?", ['y', 'n']) == 'n'
  end
  system "mv #{CONFIG['drafts']}/#{post} #{CONFIG['posts']}/#{filename}"
  puts "Publishing post: #{filename}"
end # task :publish

desc "List all drafts."
task :list do
  system "ls -toF #{CONFIG['drafts']}"
end # task :list

desc "Link draft folder to remote location specified in CONFIG"
task :link do
  system "ln -s #{CONFIG['draft-remote']} #{CONFIG['drafts']}"
end # task :link
